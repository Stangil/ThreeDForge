@page "/edit/{id:int}"
@inject IStoreRepository Repository
@inject NavigationManager Navigation
<PageTitle>Edit Item</PageTitle>

@if(Item is not null)
{
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" method="post" FormName="EditItemForm" OnValidSubmit="EditItem" Model="Item" autocomplete="off">
                <h3>Edit Item @Id</h3>
                <input type="hidden" name="Item.Id" value="@Item.Id" />
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText id="name" @bind-Value="Item.Name" class="form-control shadow-none" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <InputText id="description" @bind-Value="Item.Description" class="form-control shadow-none" />
                </div>
                <div class="mb-3">
                    <label for="added-date" class="form-label">Date Added</label>
                    <InputDate id="added-date" @bind-Value="Item.AddedDate" class="form-control shadow-none" />
                </div>
                <div class="mb-3">
                    <label for="category" class="form-label">Category</label>
                    <InputSelect id="category" @bind-Value="Item.Category" class="form-control shadow-none">
                        <option value="0">
                            Select Category
                        </option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">
                                @category.ToString()
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price</label>
                    <InputNumber id="price" @bind-Value="Item.Price" class="form-control shadow-none" />
                </div>
                <div class="mb-3">
                    <button class="btn btn-primary shadow-none">
                        Submit
                    </button>
                    <a href="/" class="btn btn-secondary shadow-none ms-3">
                        Back to List
                    </a>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    [SupplyParameterFromForm]
    public Item? Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Item ??= await Repository.GetByIdAsync(Id);
    }
    private async Task EditItem()
    {
        if(Item is not null)
        {
            await Repository.UpdateAsync(Item);
            Navigation.NavigateTo("/");
        }
    }
}
